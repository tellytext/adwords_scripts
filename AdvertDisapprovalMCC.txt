/********
*
* Check Ad Status
* This script will email recipients Disapproved Adverts for
* Enabled Campaigns and enabled Ad Groups.
* This script can run hourly if required.
* Advise running daily as it may result in exceeding email quota.
* Version: 1.02
* Date: 30/08/2017
* Updated: 22/11/2017
* Author: Nicholas Potts 
* On behalf of bet365.com.
*
* Update Notes: Updated by LA to MCC level. Script run time error occured when email size was too large
*               added a simple try catch error handle. Also added logic to only send email if the ad is enabled.
*               Previously this would have resulted in daily emails where paused ads are disapproved in live campaigns.
*
********/

function main() {
  MccApp.accounts().withLimit(100).executeInParallel("checkAds", "");
}

function getEmailListForAccount() {
  
  var people = {
    '4. Alberto Prete': 'Alberto.Prete@bet365.com',
    '4. Alice Ferri' : 'Alice.Ferri@bet365.com',
    '4. Annalisa De Michele' : 'AnnalisaDe.Michele@bet365.com',
    '4. Christopher Taylor' : 'Christopher.Taylor@bet365.com',
    '4. Danelle Azzopardi' : 'Danelle.Azzopardi@bet365.com',
    '4. Diego Lavatelli' : 'Diego.Lavatelli@bet365.com',
    '4. Ezza Ayoubi' : 'Ezza.Ayoubi@bet365.com',
    '4. Francesco Corica' : 'Francesco.Corica@bet365.com',
    '4. Laura Fernandez' : 'Laura.Fernandez@bet365.com',
    '4. Lauren Farrell' : 'Lauren.Farrell@bet365.com',
    '4. Luke Anderson' : 'Luke.Anderson@bet365.com',
    '4. Mark Trapani' : 'Mark.Trapani@bet365.com',
    '4. Nicholas Potts' : 'Nicholas.Potts@bet365.com',
    '4. Ulrik HaackPedersen' : 'Ulrik.Haack-Pedersen@bet365.com'
  };
  
  var cid = AdWordsApp.currentAccount().getCustomerId();
  var labelsIter = MccApp.accounts().withIds([cid]).get().next().labels().withCondition("Name CONTAINS '4. '").get();
  var emailArr = [];
  
  var emailsObj = {};
  
  while (labelsIter.hasNext()) {   
    var labelName = labelsIter.next().getName();
    emailsObj[people[labelName]] = "";
  }
  
  var emailList = Object.keys(emailsObj).join(",");
  return emailList;
}


function checkAds() {
  
  var tableHeadersArr = ["Account Name", "Campaign Name", "AdGroup Name", "Advert ID", "Ad Policy Approval Status", "Ad Approval Status", "Ad Enabled"];
  
  var tableRowArr = [];
  var tableArr = [];
  var htmlArr = [];
  
  var disapprovedAdsCount = 0;
  
  var recipients = getEmailListForAccount();
  
  var adSelector = AdWordsApp.ads()
  .withCondition("CampaignStatus = ENABLED AND AdGroupStatus = ENABLED AND ApprovalStatus = DISAPPROVED");
  
  var adIterator = adSelector.get();
  
  while (adIterator.hasNext()) {
    var ad = adIterator.next();
    
    if (ad.isEnabled()) {
      var accountName = AdWordsApp.currentAccount().getName();
      var campaignName = ad.getCampaign().getName();
      var adGroupName = ad.getAdGroup().getName();
      var advertID = ad.getId().toString();
      var adPolicyApprovalStatus = ad.getPolicyApprovalStatus();
      var approvalStatus = ad.getApprovalStatus();
      var advertStatus = ad.isEnabled().toString().toUpperCase();
      
      tableRowArr = [accountName, campaignName, adGroupName, advertID, adPolicyApprovalStatus, approvalStatus, advertStatus];
      tableArr.push('<tr class="tableRowBold">');
      tableArr.push('<td>'+tableRowArr.join('</td><td>')+'</td>');
      tableArr.push('</tr>');
      
      disapprovedAdsCount++;
    }
  }
  
  if(disapprovedAdsCount < 1) {
    return;
  }
  
  htmlArr.push('<html><head><style>',
               '.tableRowBold {font-weight: normal; font: 10pt arial; padding: 3px 3px 3px 3px; background-color: #fffff; border: 1px solid black}',
               '.tableColor {font: 10pt arial; padding: 3px 3px 3px 3px; background-color: #fffff; border: 1px solid black}',
               'th {font: 12pt arial; text-align: left; border: 1px solid black; background-color: #ddd; padding: 2px 2px 2px 2px}',
               'td {text-align: left; border: 1px solid black}',
               'span {font: 14pt arial;}',
               'p {font: 10pt arial;}',
               '</style></head>',
               '<body>',
               '<table><tr><th>', tableHeadersArr.join('</th><th>'), tableArr.join(''), '</table>',
               '<p><STRONG>Remaining Email Quota: ', MailApp.getRemainingDailyQuota(), '</STRONG></p>',
               '</body>',
               '</html>');
  
  if (!AdWordsApp.getExecutionInfo().isPreview() && disapprovedAdsCount > 3) {
    try {
      MailApp.sendEmail({
        to: recipients,
        cc: "luke.anderson@bet365.com",
        name: 'Ad Approval Status',
        subject: disapprovedAdsCount + " ads disapproved " + accountName,
        htmlBody: htmlArr.join('\n'),
      });
      Logger.log("Email Sent: " + Utilities.formatDate(new Date(), AdWordsApp.currentAccount().getTimeZone(), 'MMMM dd, yyyy HH:mm:ss Z'));
    }
    catch (e) {
      MailApp.sendEmail({
        to: recipients,
        cc: "luke.anderson@bet365.com",
        name: 'Ad Approval Status',
        subject: disapprovedAdsCount + " ads disapproved " + accountName,
        body: disapprovedAdsCount + " ads disapproved " + accountName,
      });
      
      Logger.log("ERROR: " + e + Utilities.formatDate(new Date(), AdWordsApp.currentAccount().getTimeZone(), 'MMMM dd, yyyy HH:mm:ss Z'));
    }
  }
}